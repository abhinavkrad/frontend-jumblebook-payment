stages:
  - build
  - dockerize
  - deploy

variables:
  DOCKER_REGISTRY: index.docker.io
  DOCKER_IMAGE: manish754/gaming-payment
  DOCKER_TAG: $CI_COMMIT_SHA
  GCP_PROJECT_ID: "root-clover-429618-v1"
  GKE_CLUSTER_NAME: "my-gke-cluster"
  GKE_ZONE: "us-central1"
  KUBECONFIG: /root/.kube/config
  GOOGLE_APPLICATION_CREDENTIALS: "credentials/root-clover-429618-v1-4e886307d591.json"

cache:
  paths:
    - node_modules/

build:
  image: node:18
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - build

dockerize:
  image: docker:latest
  stage: dockerize
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - if [ -z "$DOCKER_TAG" ]; then export DOCKER_TAG="latest"; fi
  script:
    - docker build --pull -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  dependencies:
    - build

deploy:
  image: google/cloud-sdk:latest
  stage: deploy
  before_script:
    - gcloud auth activate-service-account --key-file=credentials/root-clover-429618-v1-4e886307d591.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_ZONE
  script:
    # Check if the deployment exists
    - |
      if kubectl get deployment gaming-payment; then
        kubectl set image deployment/gaming-payment gaming-payment=$DOCKER_IMAGE:$DOCKER_TAG
        kubectl rollout status deployment/gaming-payment
      else
        echo "Creating deployment gaming-payment."
        kubectl apply -f gaming-payment-deployment.yaml
        kubectl set image deployment/gaming-payment gaming-payment=$DOCKER_IMAGE:$DOCKER_TAG
        kubectl rollout status deployment/gaming-payment
      fi
    # Apply the service configuration
    - kubectl apply -f gaming-payment-service.yaml
  only:
    - development
